{"version":3,"file":"main.js","mappings":"yBAAe,MAAMA,EACnBC,WAAAA,CAAYC,EAAIC,EAAMC,EAAQC,GAC5BC,KAAKC,eAAiBC,SAASC,cAAc,YAC7CH,KAAKJ,GAAKA,EACVI,KAAKH,KAAOA,EACZG,KAAKF,OAASA,EACdE,KAAKD,QAAUA,EAEf,MAAMK,EAAWV,EAAQW,WAAWL,KAAKD,SACzC,IAAIO,EACJ,MAAMC,EAASL,SAASM,cAAc,OA0BtC,OAzBAD,EAAOE,UAAUC,IAAI,UACrBH,EAAOI,QAAQf,GAAKI,KAAKJ,GAGvBU,EADkB,SAAhBN,KAAKF,SAAqC,IAAhBE,KAAKF,OACtB,UAEA,GAGbS,EAAOK,UAAa,+HAGiCN,uIAItBN,KAAKH,yEAGNO,iLAMvBG,CACT,CAEA,iBAAOF,CAAWQ,GAChB,MAAMC,EAAO,IAAIC,KAAKF,GAEtB,IAAIG,EAAMF,EAAKG,UACXC,EAAQJ,EAAKK,WACjB,MAAMC,EAAON,EAAKO,cAClB,IAAIC,EAAOR,EAAKS,WACZC,EAAUV,EAAKW,aAOnB,OALAT,EAAMA,EAAM,GAAM,IAAGA,IAAQA,EAC7BE,EAAQA,EAAQ,GAAM,IAAGA,EAAQ,IAAO,GAAEA,EAAQ,IAClDI,EAAOA,EAAO,GAAM,IAAGA,IAASA,EAChCE,EAAUA,EAAU,GAAM,IAAGA,IAAYA,EAEjC,GAAER,KAAOE,KAASE,KAAQE,KAAQE,GAC5C,ECrDa,MAAME,EACnB/B,WAAAA,CAAYgC,EAAS,0BACnB3B,KAAK2B,OAASA,CAChB,CAEAC,UAAAA,GACE,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAM,IAAIC,eAChBD,EAAIE,KAAK,MAAQ,GAAElC,KAAK2B,4BACxBK,EAAIG,iBAAiB,QAAQ,KAC3B,GAAIH,EAAIlC,QAAU,KAAOkC,EAAIlC,OAAS,IACpC,IACE,MAAMgB,EAAOsB,KAAKC,MAAML,EAAIM,UAC5BR,EAAQhB,EACV,CAAE,MAAOyB,GACPR,EAAOQ,EACT,CACF,IAEFP,EAAIQ,MAAM,GAEd,CAEAC,UAAAA,CAAW7C,GACT,OAAO,IAAIiC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAM,IAAIC,gBACD,IAAIS,iBACZC,OAAO,KAAM/C,GACpBoC,EAAIE,KAAK,MAAQ,GAAElC,KAAK2B,+BAA+B/B,KACvDoC,EAAIG,iBAAiB,QAAQ,KAC3B,GAAIH,EAAIlC,QAAU,KAAOkC,EAAIlC,OAAS,IACpC,IACE,MAAMgB,EAAOsB,KAAKC,MAAML,EAAIM,UAC5BR,EAAQhB,EACV,CAAE,MAAOyB,GACPR,EAAOQ,EACT,CACF,IAEFP,EAAIQ,MAAM,GAEd,CAEAI,YAAAA,CAAa/C,EAAMgD,GACjB,OAAO,IAAIhB,SAAQ,CAACC,EAASC,KAC3B,MAAMe,EAAS,IAAIJ,gBACnBI,EAAOH,OAAO,OAAQ9C,GACtBiD,EAAOH,OAAO,cAAeE,GAC7B,MAAMb,EAAM,IAAIC,eAChBD,EAAIE,KAAK,OAAS,GAAElC,KAAK2B,8BACzBK,EAAIG,iBAAiB,QAAQ,KAC3B,GAAIH,EAAIlC,QAAU,KAAOkC,EAAIlC,OAAS,IACpC,IACE,MAAMgB,EAAOsB,KAAKC,MAAML,EAAIM,UAC5BR,EAAQhB,EACV,CAAE,MAAOyB,GACPR,EAAOQ,EACT,CACF,IAEFP,EAAIQ,KAAKM,EAAO,GAEpB,CAEAC,UAAAA,CAAWnD,GACT,OAAO,IAAIiC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAM,IAAIC,gBACD,IAAIS,iBACZC,OAAO,KAAM/C,GACpBoC,EAAIE,KAAK,SAAW,GAAElC,KAAK2B,+BAA+B/B,KAC1DoC,EAAIG,iBAAiB,QAAQ,KAC3B,GAAIH,EAAIlC,QAAU,KAAOkC,EAAIlC,OAAS,IACpC,IACE,MAAMgB,EAAOsB,KAAKC,MAAML,EAAIM,UAC5BR,EAAQhB,EACV,CAAE,MAAOyB,GACPR,EAAOQ,EACT,CACF,IAEFP,EAAIQ,MAAM,GAEd,CAEAQ,UAAAA,CAAWpD,EAAIC,EAAMgD,GACnB,OAAO,IAAIhB,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAM,IAAIC,eACVa,EAAS,IAAIJ,gBACnBI,EAAOH,OAAO,KAAM/C,GACpBkD,EAAOH,OAAO,OAAQ9C,GACtBiD,EAAOH,OAAO,cAAeE,GAC7Bb,EAAIE,KAAK,OAAS,GAAElC,KAAK2B,+BAA+B/B,KACxDoC,EAAIG,iBAAiB,QAAQ,KAC3B,GAAIH,EAAIlC,QAAU,KAAOkC,EAAIlC,OAAS,IACpC,IACE,MAAMgB,EAAOsB,KAAKC,MAAML,EAAIM,UAC5BR,EAAQhB,EACV,CAAE,MAAOyB,GACPR,EAAOQ,EACT,CACF,IAEFP,EAAIQ,KAAKM,EAAO,GAEpB,CAEAG,WAAAA,CAAYrD,EAAIE,GACd,OAAO,IAAI+B,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAM,IAAIC,eACVa,EAAS,IAAIJ,gBACnBI,EAAOH,OAAO,KAAM/C,GACpBkD,EAAOH,OAAO,SAAU7C,GACxBkC,EAAIE,KAAK,OAAS,GAAElC,KAAK2B,gCAAgC/B,KACzDoC,EAAIG,iBAAiB,QAAQ,KAC3B,GAAIH,EAAIlC,QAAU,KAAOkC,EAAIlC,OAAS,IACpC,IACE,MAAMgB,EAAOsB,KAAKC,MAAML,EAAIM,UAC5BR,EAAQhB,EACV,CAAE,MAAOyB,GACPR,EAAOQ,EACT,CACF,IAEFP,EAAIQ,KAAKM,EAAO,GAEpB,EC5Ha,MAAMI,EACnBvD,WAAAA,CAAYwD,GACVnD,KAAKmD,SAAWA,EAChBnD,KAAKoD,MAAQlD,SAASM,cAAc,OACpCR,KAAKqD,QAAU,IAAI3B,CACrB,CAEA4B,SAAAA,CAAUC,GACRvD,KAAKoD,MAAM3C,UAAUC,IAAI,SACP,cAAd6C,GACFvD,KAAKoD,MAAM3C,UAAUC,IAAI,iBACzBV,KAAKoD,MAAMxC,UAAa,m0BAiBxBZ,KAAKH,KAAOG,KAAKoD,MAAMjD,cAAc,eACrCH,KAAK6C,YAAc7C,KAAKoD,MAAMjD,cAAc,sBAE5CH,KAAKH,KAAK2D,MAAQ,GAClBxD,KAAK6C,YAAYW,MAAQ,IACF,eAAdD,IACTvD,KAAKoD,MAAM3C,UAAUC,IAAI,iBACzBV,KAAKoD,MAAMxC,UAAa,o0BAkB1BZ,KAAKmD,SAASR,OAAO3C,KAAKoD,OAC1BpD,KAAKyD,YAAcvD,SAASC,cAAc,kBAE1CH,KAAKyD,YAAYC,MAAMC,KACpBC,OAAOC,YAAc7D,KAAKyD,YAAYK,cAAgB,EAD3B,KAG9B9D,KAAKyD,YAAYC,MAAMK,MACpBH,OAAOI,WAAahE,KAAKyD,YAAYQ,aAAe,EADxB,IAGjC,CAEAC,YAAAA,CAAaC,GACXnE,KAAKH,KAAOG,KAAKoD,MAAMjD,cAAc,eACrCH,KAAK6C,YAAc7C,KAAKoD,MAAMjD,cAAc,sBAC5CH,KAAKoE,KAAOpE,KAAKoD,MAAMjD,cAAc,eACrCH,KAAKqE,UAAYrE,KAAKoD,MAAMjD,cAAc,eAE1CH,KAAKqE,UAAUlC,iBAAiB,SAAUmC,GAAUtE,KAAKuE,WAAWD,KACpEtE,KAAKoE,KAAKjC,iBAAiB,SAAUgC,EACvC,CAEAI,UAAAA,CAAWD,GACTA,EAAME,iBACNxE,KAAKyD,YAAYgB,QACnB,EC/Ea,MAAMC,EACnB/E,WAAAA,CAAYwD,GACVnD,KAAKmD,SAAWA,EAChBnD,KAAKoD,MAAQlD,SAASM,cAAc,MACtC,CAEAmE,IAAAA,GACE3E,KAAKoD,MAAM3C,UAAUC,IAAI,QAAS,eAAgB,UAElDV,KAAKoD,MAAMxC,UAAa,oVAQxBZ,KAAKmD,SAASR,OAAO3C,KAAKoD,OAC1BpD,KAAK4E,YAAc1E,SAASC,cAAc,iBAC1CH,KAAK6E,aAAe7E,KAAKoD,MAAMjD,cAAc,mBAC7CH,KAAK8E,SAAW9E,KAAKoD,MAAMjD,cAAc,cAC3C,CAEA4E,eAAAA,GACE/E,KAAK4E,YAAYnE,UAAUgE,OAAO,UAClCzE,KAAK4E,YAAYlB,MAAMC,KACpBC,OAAOC,YAAc7D,KAAK4E,YAAYd,cAAgB,EAD3B,KAG9B9D,KAAK4E,YAAYlB,MAAMK,MACpBH,OAAOI,WAAahE,KAAK4E,YAAYX,aAAe,EADxB,KAG/BjE,KAAK6E,aAAa1C,iBAAiB,SAAS,IAAMnC,KAAKgF,oBACzD,CAEAA,gBAAAA,GACEhF,KAAK4E,YAAYnE,UAAUC,IAAI,SACjC,EClCF,MAAMuE,EAAS,ICGA,MACbtF,WAAAA,GACEK,KAAKkF,UAAY,KACjBlF,KAAKC,eAAiBC,SAASC,cAAc,YAC7CH,KAAKoD,MAAQ,IAAIF,EAAMhD,SAASiF,MAChCnF,KAAK4E,YAAc,IAAIF,EAAYxE,SAASiF,KAAMnF,KAAKoD,OACvDpD,KAAKJ,GAAK,KACVI,KAAKoF,OAASlF,SAASC,cAAc,YACrCH,KAAKqD,QAAU,IAAI3B,EACnB1B,KAAKqF,UAAYrF,KAAKqF,UAAUC,KAAKtF,MACrCA,KAAKgD,WAAahD,KAAKgD,WAAWsC,KAAKtF,MACvCA,KAAKiD,YAAcjD,KAAKiD,YAAYqC,KAAKtF,MACzCA,KAAKuF,cAAgBvF,KAAKuF,cAAcD,KAAKtF,MAC7CA,KAAKwF,QAAU,EACjB,CAEAC,SAAAA,CAAUP,GACR,KAAMA,aAAqBQ,aACzB,MAAM,IAAIC,MAAM,8BAElB3F,KAAKkF,UAAYA,CACnB,CAEAP,IAAAA,GACE3E,KAAK4E,YAAYD,OACjB3E,KAAK4F,SAAW1F,SAASC,cAAc,eACvCH,KAAK6F,mBAEL7F,KAAKoF,OAAOjD,iBAAiB,SAAUmC,IACrCA,EAAME,iBAENxE,KAAKoD,MAAME,UAAU,aACrBtD,KAAKoD,MAAMc,aAAalE,KAAKqF,UAAU,IAGzCrF,KAAK4F,SAASzD,iBAAiB,SAAUmC,IACvCA,EAAME,iBACNxE,KAAK8F,aAAa9F,KAAKJ,GAAG,GAE9B,CAEAiG,gBAAAA,GACkB7F,KAAKqD,QAAQzB,aACrBmE,MAAMjE,IACZ9B,KAAKwF,QAAU,GACfxF,KAAKC,eAAeW,UAAY,GAChCkB,EAAQkE,SAASC,IACf,MAAM1F,EAAS,IAAIb,EACjBuG,EAAKrG,GACLqG,EAAKpG,KACLoG,EAAKnG,OACLmG,EAAKlG,SAEPC,KAAKwF,QAAQU,KAAK3F,EAAO,IAE3B,IAAK,MAAM4F,KAAQnG,KAAKwF,QACtBxF,KAAKC,eAAe0C,OAAOwD,EAC7B,IAEFnG,KAAKC,eAAekC,iBAAiB,QAASnC,KAAKuF,cACrD,CAEAA,aAAAA,CAAcjB,GACZA,EAAME,iBAEN,MAAM4B,EAAY9B,EAAM+B,OAAOC,QAAQ,WAkBvC,GAjBAtG,KAAKJ,GAAKwG,EAAUzF,QAAQf,GAExB0E,EAAM+B,OAAO5F,UAAU8F,SAAS,eAClCvG,KAAK4E,YAAYG,kBAGfT,EAAM+B,OAAO5F,UAAU8F,SAAS,cAClBvG,KAAKqD,QAAQZ,WAAWzC,KAAKJ,IACrCmG,MAAMjE,IACZ9B,KAAKoD,MAAMA,MAAMjD,cAAc,eAAeqD,MAAQ1B,EAAQjC,KAC9DG,KAAKoD,MAAMA,MAAMjD,cAAc,sBAAsBqD,MAAQ1B,EAAQe,WAAW,IAGlF7C,KAAKoD,MAAME,UAAU,cACrBtD,KAAKoD,MAAMc,aAAalE,KAAKgD,aAI7BsB,EAAM+B,OAAO5F,UAAU8F,SAAS,gBAC7BjC,EAAM+B,OAAO5F,UAAU8F,SAAS,sBACnC,CACA,MAAMC,EAAYJ,EAAUjG,cAAc,uBAEtCqG,EACFA,EAAU/B,SAEMzE,KAAKqD,QAAQZ,WAAWzC,KAAKJ,IACrCmG,MAAMjE,IACZ,MAAMe,EAAc3C,SAASM,cAAc,OAC3CqC,EAAYpC,UAAUC,IAAI,sBAC1BmC,EAAY4D,UAAY3E,EAAQe,YAChCuD,EAAUjG,cAAc,mBAAmBwC,OAAOE,EAAY,GAGpE,EAGEyB,EAAM+B,OAAO5F,UAAU8F,SAAS,gBAC7BjC,EAAM+B,OAAO5F,UAAU8F,SAAS,sBAE/BH,EAAUjG,cAAc,oBAAoBuG,QAC9C1G,KAAKF,QAAS,EAEdE,KAAKF,QAAS,EAEhBE,KAAKiD,YAAYjD,KAAKJ,GAAII,KAAKF,QAEnC,CAEAuF,SAAAA,CAAUf,GACRA,EAAME,iBACUxE,KAAKqD,QAAQT,aAC3B5C,KAAKoD,MAAMvD,KAAK2D,MAChBxD,KAAKoD,MAAMP,YAAYW,OAEjBuC,MAAK,KACX/F,KAAK6F,kBAAkB,IAEzB7F,KAAKoD,MAAMmB,WAAWD,EACxB,CAEAwB,YAAAA,CAAalG,GACXI,KAAK4E,YAAYI,mBACDhF,KAAKqD,QAAQN,WAAWnD,GAChCmG,MAAK,KACX/F,KAAK6F,kBAAkB,GAE3B,CAEA7C,UAAAA,CAAWsB,GACTA,EAAME,iBACUxE,KAAKqD,QAAQL,WAC3BhD,KAAKJ,GACLI,KAAKoD,MAAMvD,KAAK2D,MAChBxD,KAAKoD,MAAMP,YAAYW,OAEjBuC,MAAK,KACX/F,KAAK6F,kBAAkB,IAGzB7F,KAAKoD,MAAMmB,WAAWD,EACxB,CAEArB,WAAAA,CAAYrD,GACMI,KAAKqD,QAAQJ,YAAYrD,EAAII,KAAKF,QAC1CiG,MAAK,KACX/F,KAAK6F,kBAAkB,GAE3B,GD5JIX,EAAYhF,SAASC,cAAc,cAEzC8E,EAAOQ,UAAUP,GACjBD,EAAON,M","sources":["webpack://ahj-frontend-helpdesk/./src/js/Tickets.js","webpack://ahj-frontend-helpdesk/./src/js/request.js","webpack://ahj-frontend-helpdesk/./src/js/Modal.js","webpack://ahj-frontend-helpdesk/./src/js/DeleteModal.js","webpack://ahj-frontend-helpdesk/./src/js/app.js","webpack://ahj-frontend-helpdesk/./src/js/TicketsWidget.js"],"sourcesContent":["export default class Tickets {\n  constructor(id, name, status, created) {\n    this.ticketsWrapper = document.querySelector('.tickets');\n    this.id = id;\n    this.name = name;\n    this.status = status;\n    this.created = created;\n\n    const formated = Tickets.formatDate(this.created);\n    let checkbox;\n    const ticket = document.createElement('div');\n    ticket.classList.add('ticket');\n    ticket.dataset.id = this.id;\n\n    if (this.status === 'true' || this.status === true) {\n      checkbox = 'checked';\n    } else {\n      checkbox = '';\n    }\n\n    ticket.innerHTML = `\n    <div class=\"ticket-view\">\n      <label class=\"ticket-label\">\n        <input type=\"checkbox\" class=\"ticket-checkbox\" ${checkbox}>\n        <span class=\"ticket-span\"></span>\n      </label>\n      <div class=\"ticket-content\">\n        <div class=\"ticket-name\">${this.name}</div>\n      </div>\n    </div>\n    <div class=\"ticket-created\">${formated}</div>\n    <div class=\"ticket-control\">\n      <button type=\"button\" class=\"edit-btn\">&#9998</button>\n      <button type=\"button\" class=\"delete-btn\">X</button>\n    </div>`;\n\n    return ticket;\n  }\n\n  static formatDate(date) {\n    const data = new Date(date);\n\n    let day = data.getDate();\n    let month = data.getMonth();\n    const year = data.getFullYear();\n    let hour = data.getHours();\n    let minutes = data.getMinutes();\n\n    day = day < 10 ? `0${day}` : day;\n    month = month < 10 ? `0${month + 1}` : `${month + 1}`;\n    hour = hour < 10 ? `0${hour}` : hour;\n    minutes = minutes < 10 ? `0${minutes}` : minutes;\n\n    return `${day}.${month}.${year} ${hour}:${minutes}`;\n  }\n}\n","/* eslint-disable class-methods-use-this */\nexport default class Request {\n  constructor(server = 'http://localhost:7070/') {\n    this.server = server;\n  }\n\n  allTickets() {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET', `${this.server}?method=allTickets`);\n      xhr.addEventListener('load', () => {\n        if (xhr.status >= 200 && xhr.status < 300) {\n          try {\n            const data = JSON.parse(xhr.response);\n            resolve(data);\n          } catch (e) {\n            reject(e);\n          }\n        }\n      });\n      xhr.send();\n    });\n  }\n\n  ticketById(id) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      const params = new URLSearchParams();\n      params.append('id', id);\n      xhr.open('GET', `${this.server}?method=ticketById&id=${id}`);\n      xhr.addEventListener('load', () => {\n        if (xhr.status >= 200 && xhr.status < 300) {\n          try {\n            const data = JSON.parse(xhr.response);\n            resolve(data);\n          } catch (e) {\n            reject(e);\n          }\n        }\n      });\n      xhr.send();\n    });\n  }\n\n  createTicket(name, description) {\n    return new Promise((resolve, reject) => {\n      const params = new URLSearchParams();\n      params.append('name', name);\n      params.append('description', description);\n      const xhr = new XMLHttpRequest();\n      xhr.open('POST', `${this.server}?method=createTicket`);\n      xhr.addEventListener('load', () => {\n        if (xhr.status >= 200 && xhr.status < 300) {\n          try {\n            const data = JSON.parse(xhr.response);\n            resolve(data);\n          } catch (e) {\n            reject(e);\n          }\n        }\n      });\n      xhr.send(params);\n    });\n  }\n\n  removeById(id) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      const params = new URLSearchParams();\n      params.append('id', id);\n      xhr.open('DELETE', `${this.server}?method=removeById&id=${id}`);\n      xhr.addEventListener('load', () => {\n        if (xhr.status >= 200 && xhr.status < 300) {\n          try {\n            const data = JSON.parse(xhr.response);\n            resolve(data);\n          } catch (e) {\n            reject(e);\n          }\n        }\n      });\n      xhr.send();\n    });\n  }\n\n  editTicket(id, name, description) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      const params = new URLSearchParams();\n      params.append('id', id);\n      params.append('name', name);\n      params.append('description', description);\n      xhr.open('POST', `${this.server}?method=editTicket&id=${id}`);\n      xhr.addEventListener('load', () => {\n        if (xhr.status >= 200 && xhr.status < 300) {\n          try {\n            const data = JSON.parse(xhr.response);\n            resolve(data);\n          } catch (e) {\n            reject(e);\n          }\n        }\n      });\n      xhr.send(params);\n    });\n  }\n\n  checkTicket(id, status) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      const params = new URLSearchParams();\n      params.append('id', id);\n      params.append('status', status);\n      xhr.open('POST', `${this.server}?method=checkTicket&id=${id}`);\n      xhr.addEventListener('load', () => {\n        if (xhr.status >= 200 && xhr.status < 300) {\n          try {\n            const data = JSON.parse(xhr.response);\n            resolve(data);\n          } catch (e) {\n            reject(e);\n          }\n        }\n      });\n      xhr.send(params);\n    });\n  }\n}\n","import Request from './request';\n\nexport default class Modal {\n  constructor(parentEl) {\n    this.parentEl = parentEl;\n    this.modal = document.createElement('div');\n    this.request = new Request();\n  }\n\n  drawModal(modalType) {\n    this.modal.classList.add('modal');\n    if (modalType === 'addTicket') {\n      this.modal.classList.add('modal-handler');\n      this.modal.innerHTML = `\n            <form class=\"modal-form\" method =\"POST\" action =\"http://localhost:7070\">\n                <h2 class=\"modal-title\">Добавить тикет</h2>\n                <label class=\"label-container\">\n                    <span class=\"input-title\">Краткое описание</span>\n                    <input class=\"input-name\" type=\"text\" required>\n                </label>\n                <label class=\"label-container\">\n                    <span class=\"input-title\">Подробное описание</span>\n                    <textarea class=\"input-description\" type=\"text\" required></textarea>\n                </label>\n                <div class=\"btn-box\">\n                    <button class=\"cancel-btn\" type=\"button\">Отмена</button>\n                    <button class=\"ok-btn\" type=\"submit\">Ок</button>\n                </div>\n            </form>`;\n\n      this.name = this.modal.querySelector('.input-name');\n      this.description = this.modal.querySelector('.input-description');\n\n      this.name.value = '';\n      this.description.value = '';\n    } else if (modalType === 'editTicket') {\n      this.modal.classList.add('modal-handler');\n      this.modal.innerHTML = `\n            <form class=\"modal-form\" method =\"POST\" action =\"http://localhost:7070\">\n                <h2 class=\"modal-title\">Изменить тикет</h2>\n                <label class=\"label-container\">\n                    <span class=\"input-title\">Краткое описание</span>\n                    <input class=\"input-name\" type=\"text\" required>\n                </label>\n                <label class=\"label-container\">\n                    <span class=\"input-title\">Подробное описание</span>\n                    <textarea class=\"input-description\" type=\"text\" required></textarea>\n                </label>\n                <div class=\"btn-box\">\n                    <button class=\"cancel-btn\" type=\"button\">Отмена</button>\n                    <button class=\"ok-btn\" type=\"submit\">Ок</button>\n                </div>\n            </form>`;\n    }\n\n    this.parentEl.append(this.modal);\n    this.activeModal = document.querySelector('.modal-handler');\n\n    this.activeModal.style.top = `${\n      (window.innerHeight - this.activeModal.offsetHeight) / 2\n    }px`;\n    this.activeModal.style.left = `${\n      (window.innerWidth - this.activeModal.offsetWidth) / 2\n    }px`;\n  }\n\n  modalHandler(callback) {\n    this.name = this.modal.querySelector('.input-name');\n    this.description = this.modal.querySelector('.input-description');\n    this.form = this.modal.querySelector('.modal-form');\n    this.cancelBtn = this.modal.querySelector('.cancel-btn');\n\n    this.cancelBtn.addEventListener('click', (event) => this.closeModal(event));\n    this.form.addEventListener('submit', callback);\n  }\n\n  closeModal(event) {\n    event.preventDefault();\n    this.activeModal.remove();\n  }\n}\n","export default class DeleteModal {\n  constructor(parentEl) {\n    this.parentEl = parentEl;\n    this.modal = document.createElement('div');\n  }\n\n  init() {\n    this.modal.classList.add('modal', 'delete-modal', 'hidden');\n\n    this.modal.innerHTML = `\n        <h2 class=\"modal-title\">Удалить тикет</h2>\n        <div class=\"modal-text\">Вы уверены, что хотите удалить тикет? Это действие необратимо.</div>\n        <div class=\"btn-box\">\n          <button class=\"del-cancel-btn\" type=\"button\">Отмена</button>\n          <button class=\"del-ok-btn\" type=\"submit\">Ок</button>\n        </div>`;\n\n    this.parentEl.append(this.modal);\n    this.deleteModal = document.querySelector('.delete-modal');\n    this.cancelDelBtn = this.modal.querySelector('.del-cancel-btn');\n    this.okDelBtn = this.modal.querySelector('.del-ok-btn');\n  }\n\n  openDeleteModal() {\n    this.deleteModal.classList.remove('hidden');\n    this.deleteModal.style.top = `${\n      (window.innerHeight - this.deleteModal.offsetHeight) / 2\n    }px`;\n    this.deleteModal.style.left = `${\n      (window.innerWidth - this.deleteModal.offsetWidth) / 2\n    }px`;\n    this.cancelDelBtn.addEventListener('click', () => this.closeDeleteModal());\n  }\n\n  closeDeleteModal() {\n    this.deleteModal.classList.add('hidden');\n  }\n}\n","import TicketsWidget from './TicketsWidget';\n\nconst widget = new TicketsWidget();\nconst container = document.querySelector('.container');\n\nwidget.bindToDOM(container);\nwidget.init();\n","import Tickets from './Tickets';\nimport Request from './request';\nimport Modal from './Modal';\nimport DeleteModal from './DeleteModal';\n\nexport default class TicketsWidget {\n  constructor() {\n    this.container = null;\n    this.ticketsWrapper = document.querySelector('.tickets');\n    this.modal = new Modal(document.body);\n    this.deleteModal = new DeleteModal(document.body, this.modal);\n    this.id = null;\n    this.addBtn = document.querySelector('.add-btn');\n    this.request = new Request();\n    this.addTicket = this.addTicket.bind(this);\n    this.editTicket = this.editTicket.bind(this);\n    this.checkTicket = this.checkTicket.bind(this);\n    this.ticketActions = this.ticketActions.bind(this);\n    this.tickets = [];\n  }\n\n  bindToDOM(container) {\n    if (!(container instanceof HTMLElement)) {\n      throw new Error('Контейнер не \"HTMLElement\"');\n    }\n    this.container = container;\n  }\n\n  init() {\n    this.deleteModal.init();\n    this.delOkBtn = document.querySelector('.del-ok-btn');\n    this.renderAllTickets();\n\n    this.addBtn.addEventListener('click', (event) => {\n      event.preventDefault();\n\n      this.modal.drawModal('addTicket');\n      this.modal.modalHandler(this.addTicket);\n    });\n\n    this.delOkBtn.addEventListener('click', (event) => {\n      event.preventDefault();\n      this.deleteTicket(this.id);\n    });\n  }\n\n  renderAllTickets() {\n    const request = this.request.allTickets();\n    request.then((resolve) => {\n      this.tickets = [];\n      this.ticketsWrapper.innerHTML = '';\n      resolve.forEach((item) => {\n        const ticket = new Tickets(\n          item.id,\n          item.name,\n          item.status,\n          item.created,\n        );\n        this.tickets.push(ticket);\n      });\n      for (const elem of this.tickets) {\n        this.ticketsWrapper.append(elem);\n      }\n    });\n    this.ticketsWrapper.addEventListener('click', this.ticketActions);\n  }\n\n  ticketActions(event) {\n    event.preventDefault();\n\n    const curTicket = event.target.closest('.ticket');\n    this.id = curTicket.dataset.id;\n\n    if (event.target.classList.contains('delete-btn')) {\n      this.deleteModal.openDeleteModal();\n    }\n\n    if (event.target.classList.contains('edit-btn')) {\n      const request = this.request.ticketById(this.id);\n      request.then((resolve) => {\n        this.modal.modal.querySelector('.input-name').value = resolve.name;\n        this.modal.modal.querySelector('.input-description').value = resolve.description;\n      });\n\n      this.modal.drawModal('editTicket');\n      this.modal.modalHandler(this.editTicket);\n    }\n\n    if (\n      event.target.classList.contains('ticket-name')\n      || event.target.classList.contains('ticket-description')\n    ) {\n      const ticketDes = curTicket.querySelector('.ticket-description');\n\n      if (ticketDes) {\n        ticketDes.remove();\n      } else {\n        const request = this.request.ticketById(this.id);\n        request.then((resolve) => {\n          const description = document.createElement('div');\n          description.classList.add('ticket-description');\n          description.innerText = resolve.description;\n          curTicket.querySelector('.ticket-content').append(description);\n        });\n      }\n    }\n\n    if (\n      event.target.classList.contains('ticket-span')\n      || event.target.classList.contains('ticket-checkbox')\n    ) {\n      if (curTicket.querySelector('.ticket-checkbox').checked) {\n        this.status = false;\n      } else {\n        this.status = true;\n      }\n      this.checkTicket(this.id, this.status);\n    }\n  }\n\n  addTicket(event) {\n    event.preventDefault();\n    const request = this.request.createTicket(\n      this.modal.name.value,\n      this.modal.description.value,\n    );\n    request.then(() => {\n      this.renderAllTickets();\n    });\n    this.modal.closeModal(event);\n  }\n\n  deleteTicket(id) {\n    this.deleteModal.closeDeleteModal();\n    const request = this.request.removeById(id);\n    request.then(() => {\n      this.renderAllTickets();\n    });\n  }\n\n  editTicket(event) {\n    event.preventDefault();\n    const request = this.request.editTicket(\n      this.id,\n      this.modal.name.value,\n      this.modal.description.value,\n    );\n    request.then(() => {\n      this.renderAllTickets();\n    });\n\n    this.modal.closeModal(event);\n  }\n\n  checkTicket(id) {\n    const request = this.request.checkTicket(id, this.status);\n    request.then(() => {\n      this.renderAllTickets();\n    });\n  }\n}\n"],"names":["Tickets","constructor","id","name","status","created","this","ticketsWrapper","document","querySelector","formated","formatDate","checkbox","ticket","createElement","classList","add","dataset","innerHTML","date","data","Date","day","getDate","month","getMonth","year","getFullYear","hour","getHours","minutes","getMinutes","Request","server","allTickets","Promise","resolve","reject","xhr","XMLHttpRequest","open","addEventListener","JSON","parse","response","e","send","ticketById","URLSearchParams","append","createTicket","description","params","removeById","editTicket","checkTicket","Modal","parentEl","modal","request","drawModal","modalType","value","activeModal","style","top","window","innerHeight","offsetHeight","left","innerWidth","offsetWidth","modalHandler","callback","form","cancelBtn","event","closeModal","preventDefault","remove","DeleteModal","init","deleteModal","cancelDelBtn","okDelBtn","openDeleteModal","closeDeleteModal","widget","container","body","addBtn","addTicket","bind","ticketActions","tickets","bindToDOM","HTMLElement","Error","delOkBtn","renderAllTickets","deleteTicket","then","forEach","item","push","elem","curTicket","target","closest","contains","ticketDes","innerText","checked"],"sourceRoot":""}